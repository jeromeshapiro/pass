cmake_minimum_required(VERSION 3.8) 
project(pass)


add_library(CLI src/cli.c)
target_include_directories(CLI
    PUBLIC 
        $<INSTALL_INTERFACE:src>    
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)

add_library(CRYPTO src/crypto.c)
target_include_directories(CRYPTO
    PUBLIC 
        $<INSTALL_INTERFACE:src>    
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)

add_library(STORAGE src/storage.c)
target_include_directories(STORAGE
    PUBLIC 
        $<INSTALL_INTERFACE:src>    
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)

add_library(PASSPHRASE src/passphrase.c)
target_include_directories(PASSPHRASE
    PUBLIC 
        $<INSTALL_INTERFACE:src>    
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/src
)

include_directories(src)


find_package(OpenSSL REQUIRED)
include_directories(${OPENSSL_INCLUDE_DIR})


file(GLOB SOURCES "src/*.c")
add_executable(${PROJECT_NAME} ${SOURCES})

target_link_libraries(${PROJECT_NAME} OpenSSL::Crypto)

if(APPLE)
	install(TARGETS ${PROJECT_NAME} DESTINATION /usr/local/bin)
elseif(UNIX)
	install(TARGETS ${PROJECT_NAME} DESTINATION /usr/bin)
endif()

